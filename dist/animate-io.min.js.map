{"version":3,"sources":["animate-io.js"],"names":["window","observers","defaultSettings","delay","offset","enterIntersectionClassName","exitIntersectionClassName","repeat","threshold","root","document","rootMargin","settings","elements","getAttrVal","elem","attr","defaultValue","val","hasAttribute","attrval","getAttribute","main","_settings","console","log","querySelectorAll","forEach","i","setAttribute","num","parseInt","Number","isNaN","attrToNum","split","offsetVal","length","intersected","classes","aioType","push","observer","IntersectionObserver","entries","intersectionsettings","entry","ratio","intersectionRatio","entryTimeOut","setTimeout","c","target","classList","add","clearTimeout","remove","unobserve","disconnect","observe","manualObserver","options","callback","defaultOptions","in","out","trim","Element","NodeList","prototype","isPrototypeOf","HTMLCollection","error","killAllObservers","o","resetAnimateIO","AnimateIO","init","observeOnce","end","reset","restart","destroy","attributes","Array","from","name","indexOf","removeAttribute"],"mappings":"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","file":"animate-io.min.js","sourcesContent":["((window) => {\r\n\r\n    let observers = [];\r\n\r\n    let defaultSettings = {\r\n        delay: 0,\r\n        offset: 0,\r\n        enterIntersectionClassName: \"aio-enter\",\r\n        exitIntersectionClassName: \"aio-exit\",\r\n        repeat: false,\r\n        threshold: 0,\r\n        root: document,\r\n        rootMargin: '0px 0px 0px 0px',\r\n        threshold: 0\r\n    }\r\n    let settings = {};\r\n\r\n    let elements = null;\r\n\r\n    let getAttrVal = (elem, attr, defaultValue) => {\r\n        let val = defaultValue;\r\n        if (elem.hasAttribute(attr)) {\r\n            let attrval = elem.getAttribute(attr);\r\n            if (attrval != null) {\r\n                val = attrval;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    let attrToNum = (elem, attr, defaultValue) => {\r\n        let val = getAttrVal(elem, attr, defaultValue);\r\n        let num = parseInt(val);\r\n        return Number.isNaN(num) ? defaultValue : num;\r\n    }\r\n\r\n    let main = (_settings) => {\r\n        settings = { ...defaultSettings, ..._settings }\r\n        console.log(\"hello\");\r\n\r\n        elements = document.querySelectorAll('[data-aio]');\r\n\r\n        elements.forEach((elem, i) => {\r\n            elem.setAttribute('data-aio-id', `aio_auto_${i}`);\r\n\r\n            let repeat = elem.hasAttribute('data-aio-repeat') || settings.repeat;\r\n            let delay = attrToNum(elem, 'data-aio-delay', settings.delay);\r\n            let offsetTop = getAttrVal(elem, 'data-aio-offset-top', settings.rootMargin.split(\" \")[0]);\r\n            let offsetRgt = getAttrVal(elem, 'data-aio-offset-right', settings.rootMargin.split(\" \")[1]);\r\n            let offsetBtm = getAttrVal(elem, 'data-aio-offset-bottom', settings.rootMargin.split(\" \")[2]);\r\n            let offsetLft = getAttrVal(elem, 'data-aio-offset-left', settings.rootMargin.split(\" \")[3]);\r\n            let rootMargin = `${offsetTop} ${offsetRgt} ${offsetBtm} ${offsetLft}`;\r\n            if (elem.hasAttribute(\"data-aio-offset\")) {\r\n                let offsetVal = elem.getAttribute(\"data-aio-offset\");\r\n                if (offsetVal != null && offsetVal.length > 0) {\r\n                    rootMargin = offsetVal;\r\n                }\r\n            }\r\n            let intersected = false;\r\n\r\n            let classes = [settings.enterIntersectionClassName];\r\n            let aioType = elem.getAttribute('data-aio');\r\n            if (aioType.length > 0) {\r\n                classes.push(`aio-${aioType}`);\r\n            }\r\n\r\n            let intersectionsettings = {\r\n                root: settings.root,\r\n                rootMargin: rootMargin,\r\n                threshold: settings.threshold\r\n            }\r\n\r\n            let observer = new IntersectionObserver((entries, intersectionsettings) => {\r\n                entries.forEach(entry => {\r\n                    let ratio = entry.intersectionRatio;\r\n                    let entryTimeOut = 0;\r\n\r\n                    if (ratio > 0) {\r\n                        intersected = true;\r\n                        entryTimeOut = setTimeout(() => {\r\n                            classes.forEach(c => {\r\n                                entry.target.classList.add(c);\r\n                            });\r\n                        }, delay);\r\n                    }\r\n\r\n                    if (ratio == 0 && repeat) {\r\n                        clearTimeout(entryTimeOut);\r\n                        classes.forEach(c => {\r\n                            entry.target.classList.remove(c);\r\n                        });\r\n                    }\r\n\r\n                    if (ratio == 0 && !repeat && intersected) {\r\n                        observer.unobserve(elem);\r\n                        observer.disconnect();\r\n                    }\r\n                })\r\n            });\r\n\r\n            observer.observe(elem);\r\n            observers.push(observer);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    let manualObserver = (target, options, callback, repeat) => {\r\n        let defaultOptions = {\r\n            root: document,\r\n            rootMargin: 0,\r\n            threshold: 0,\r\n            ...options\r\n        }\r\n        let observer = new IntersectionObserver((entries, defaultOptions) => {\r\n            entries.forEach(entry => {\r\n                callback(entry);\r\n\r\n                let ratio = entry.intersectionRatio;\r\n                if (ratio != 0) {\r\n                    if (entry.in) entry.in();\r\n                    if (!repeat) {\r\n                        observer.unobserve(entry.target);\r\n                        observer.disconnect();\r\n                    }\r\n                } else {\r\n                    if (entry.out) entry.out();\r\n                }\r\n            })\r\n        });\r\n\r\n        if (typeof target == \"string\" && target.trim().length > 0) {\r\n            document.querySelectorAll(target).forEach(elem => observer.observe(elem));\r\n        } else if (target instanceof Element) {\r\n            observer.observe(target);\r\n        } else if (NodeList.prototype.isPrototypeOf(target)) {\r\n            target.forEach(elem => observer.observe(elem));\r\n        } else if (HTMLCollection.prototype.isPrototypeOf(target)) {\r\n            [...target].forEach(elem => observer.observe(elem));\r\n        } else {\r\n            console.error(`Target element: \"${target}\" not found`);\r\n        }\r\n    }\r\n\r\n\r\n    let manualObserverOnce = (target, options, callback) => {\r\n        manualObserver(target, options, callback, false);\r\n    }\r\n\r\n    let manualObserverMany = (target, options, callback) => {\r\n        manualObserver(target, options, callback, true);\r\n    }\r\n\r\n\r\n    let killAllObservers = () => {\r\n        observers.forEach(o => {\r\n            o.disconnect();\r\n        })\r\n\r\n        observers = [];\r\n    }\r\n\r\n    let resetAnimateIO = () => {\r\n        killAllObservers();\r\n        let _elems = document.querySelectorAll('[data-aio]');\r\n        _elems.forEach((elem, i) => {\r\n            elem.classList.remove(settings.enterIntersectionClassName);\r\n\r\n            let aioType = elem.getAttribute('data-aio');\r\n            if (aioType.length > 0) {\r\n                elem.classList.remove(`aio-${aioType}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    let destroyAnimateIO = () => {\r\n        resetAnimateIO();\r\n        let _elems = document.querySelectorAll('[data-aio]');\r\n        _elems.forEach((elem, i) => {\r\n            let { attributes } = elem;\r\n            Array.from(attributes).forEach(attr => {\r\n                if (attr.name.indexOf(\"data-aio\") > -1) {\r\n                    elem.removeAttribute(attr.name);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    let restartAnimateIO = () => {\r\n        resetAnimateIO();\r\n        main();\r\n    }\r\n\r\n    window.AnimateIO = {\r\n        init: main,\r\n        observe: manualObserverMany,\r\n        observeOnce: manualObserverOnce,\r\n        end: killAllObservers,\r\n        reset: resetAnimateIO,\r\n        restart: restartAnimateIO,\r\n        destroy: destroyAnimateIO\r\n    };\r\n})(window)\r\n\r\nconsole.log('yo')"]}